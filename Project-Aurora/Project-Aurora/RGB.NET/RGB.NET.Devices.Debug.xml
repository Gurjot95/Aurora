<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RGB.NET.Devices.Debug</name>
    </assembly>
    <members>
        <member name="T:RGB.NET.Devices.Debug.DebugDeviceProvider">
            <inheritdoc />
            <summary>
            Represents a device provider responsible for debug devices.
            </summary>
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugDeviceProvider.Instance">
            <summary>
            Gets the singleton <see cref="T:RGB.NET.Devices.Debug.DebugDeviceProvider"/> instance.
            </summary>
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugDeviceProvider.IsInitialized">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugDeviceProvider.Devices">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugDeviceProvider.HasExclusiveAccess">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugDeviceProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGB.NET.Devices.Debug.DebugDeviceProvider"/> class.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if this constructor is called even if there is already an instance of this class.</exception>
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugDeviceProvider.AddFakeDeviceDefinition(System.String,System.String,System.Func{System.Collections.Generic.Dictionary{RGB.NET.Core.LedId,RGB.NET.Core.Color}},System.Action{System.Collections.Generic.IEnumerable{RGB.NET.Core.Led}})">
            <summary>
            Adds a new fake device definition.
            </summary>
            <param name="layout">The path of the layout file to be used.</param>
            <param name="imageLayout">The image-layout to load.</param>
            <param name="syncBackFunc">A function emulating device syncback.</param>
            <param name="updateLedsAction">A action emulating led-updates.</param>
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugDeviceProvider.ClearFakeDeviceDefinitions">
            <summary>
            Removes all previously added fake device definitions.
            </summary>
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugDeviceProvider.Initialize(RGB.NET.Core.RGBDeviceType,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugDeviceProvider.ResetDevices">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugDeviceProvider.Dispose">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Devices.Debug.DebugDeviceProviderLoader">
            <summary>
            Represents a device provider loaded used to dynamically load debug devices into an application.
            </summary>
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugDeviceProviderLoader.RequiresInitialization">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugDeviceProviderLoader.GetDeviceProvider">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Devices.Debug.DebugRGBDevice">
            <inheritdoc />
            <summary>
            Represents a debug device.
            </summary>
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugRGBDevice.DeviceInfo">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugRGBDevice.#ctor(System.String,System.Func{System.Collections.Generic.Dictionary{RGB.NET.Core.LedId,RGB.NET.Core.Color}},System.Action{System.Collections.Generic.IEnumerable{RGB.NET.Core.Led}})">
            <summary>
            Internal constructor of <see cref="T:RGB.NET.Devices.Debug.DebugRGBDeviceInfo"/>.
            </summary>
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugRGBDevice.SyncBack">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugRGBDevice.UpdateLeds(System.Collections.Generic.IEnumerable{RGB.NET.Core.Led})">
            <inheritdoc />
        </member>
        <member name="T:RGB.NET.Devices.Debug.DebugRGBDeviceInfo">
            <inheritdoc />
            <summary>
            Represents device information for a <see cref="T:RGB.NET.Devices.Debug.DebugRGBDevice"/> />.
            </summary>
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugRGBDeviceInfo.DeviceType">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugRGBDeviceInfo.DeviceName">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugRGBDeviceInfo.Manufacturer">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugRGBDeviceInfo.Model">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugRGBDeviceInfo.Lighting">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugRGBDeviceInfo.SupportsSyncBack">
            <inheritdoc />
        </member>
        <member name="P:RGB.NET.Devices.Debug.DebugRGBDeviceInfo.Image">
            <inheritdoc />
        </member>
        <member name="M:RGB.NET.Devices.Debug.DebugRGBDeviceInfo.#ctor(RGB.NET.Core.RGBDeviceType,System.String,System.String,RGB.NET.Core.RGBDeviceLighting,System.Boolean,System.String)">
            <summary>
            Internal constructor of <see cref="T:RGB.NET.Devices.Debug.DebugRGBDeviceInfo"/>.
            </summary>
            <param name="deviceType">The <see cref="T:RGB.NET.Core.RGBDeviceType"/> of the device.</param>
            <param name="manufacturer">The manufacturer of the device.</param>
            <param name="model">The model of the device.</param>
            <param name="lighting">The <see cref="T:RGB.NET.Core.RGBDeviceLighting"/> of the device.</param>
            <param name="supportsSyncBack">True if the device supports syncback; false if not.</param>
        </member>
    </members>
</doc>
